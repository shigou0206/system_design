[package]
name = "jsonrpc-rust"
version = "0.1.0"
edition = "2021"
description = "A universal JSON-RPC library for tool development"
license = "MIT OR Apache-2.0"
repository = "https://github.com/example/jsonrpc-rust"
keywords = ["jsonrpc", "rpc", "tools", "async", "transport"]
categories = ["network-programming", "web-programming", "asynchronous"]

[features]
default = ["std", "tcp"]
std = []
tcp = ["tokio/net"]
websocket = ["tokio-tungstenite"]
http = ["warp"]
sse = ["warp", "tokio-stream"]
debug-location = []
mock = []
benchmarks = ["criterion"]
fuzz = ["afl"]
prometheus = ["prometheus-client"]
trn-integration = ["trn-rust"]

[dependencies]
# 核心异步运行时
tokio = { version = "1.0", features = ["macros", "rt-multi-thread", "sync", "time"] }
async-trait = "0.1"
futures = "0.3"
tokio-stream = { version = "0.1", optional = true }

# JSON 序列化
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# 错误处理
anyhow = "1.0"
thiserror = "1.0"

# 时间处理
chrono = { version = "0.4", features = ["serde"] }

# 传输层依赖 (可选)
tokio-tungstenite = { version = "0.20", optional = true }
warp = { version = "0.3", optional = true }

# TRN 集成 (可选)
trn-rust = { path = "../trn-rust", optional = true }

# 监控和性能 (可选)
prometheus-client = { version = "0.22", optional = true }
criterion = { version = "0.5", optional = true }
afl = { version = "0.13", optional = true }

# 工具依赖
uuid = { version = "1.0", features = ["v4", "serde"] }
dashmap = "5.5"
parking_lot = "0.12"
rand = "0.8"

[dev-dependencies]
tokio-test = "0.4"
criterion = "0.5"
proptest = "1.0"



[lib]
name = "jsonrpc_rust"
path = "src/lib.rs" 